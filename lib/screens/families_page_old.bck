import 'package:flutter/material.dart';
import 'dishes_page.dart';
import 'package:http/http.dart' as http;
import 'dart:async';
import 'dart:convert';

class FamilyPage extends StatefulWidget {
  const FamilyPage({super.key, required this.idWaiter, required this.idTable});

  final String idWaiter;
  final String idTable;

  @override
  State<FamilyPage> createState() => _FamilyPageState();
}

class _FamilyPageState extends State<FamilyPage> {

  List listFavorites = [];
  String vApiUrlFavorites = "https://herradormartinez.es/gestrest/api_gestrest/dishes";
  String vImageUrl="https://herradormartinez.es/gestrest/images/dishes";

  Future readDataFavorites() async {
    //vRoom=3;
    var vFile="readDataFavorites.php";
    var url = "$vApiUrlFavorites/$vFile";
    var res = await http.get(Uri.parse(url));

    if (res.statusCode == 200){
      var redX = jsonDecode(res.body);

      setState(() {
        listFavorites.addAll(redX);
        _streamController.add(redX);
      });
      print(listFavorites);
    }
  }

  late StreamController<List<dynamic>> _streamController;
  late Stream<List<dynamic>> _stream;

  @override
  void initState() {
    // TODO: implement initState
    super.initState();

    setState(() {
      _streamController = StreamController();
      _stream = _streamController.stream;
    });

    //getData(widget.idRoom);
    getDataFavorites();
  }


  getDataFavorites() async {
    await readDataFavorites();
  }


  @override
  Widget build(BuildContext context) {
    List<Map<String, dynamic>> families = [
      {
        'id': 1,
        'name': 'Bebidas',
        'image': 'assets/dishes/bebidas/vino_tinto.jpg'
      },
      {
        'id': 2,
        'name': 'Entrantes',
        'image': 'assets/dishes/ensaladas/ensalada_arroz.jpg'
      },
      {'id': 3, 'name': 'Carnes', 'image': 'assets/dishes/carne/escalope.jpg'},
      {
        'id': 4,
        'name': 'Pescado',
        'image': 'assets/dishes/pescado/trucha_patata.jpg'
      },
      {'id': 5, 'name': 'Marisco', 'image': 'assets/dishes/marisco/gambas.jpg'},
      {
        'id': 6,
        'name': 'Postre',
        'image': 'assets/dishes/postres/tarta_queso.jpg'
      },
      {'id': 7, 'name': 'Cafés', 'image': 'assets/dishes/cafe/cafe_solo.jpg'},
      {
        'id': 8,
        'name': 'Bebidas',
        'image': 'assets/dishes/bebidas/vino_tinto.jpg'
      },
      {
        'id': 9,
        'name': 'Entrantes',
        'image': 'assets/dishes/ensaladas/ensalada_arroz.jpg'
      },
      {'id': 10, 'name': 'Carnes', 'image': 'assets/dishes/carne/escalope.jpg'},
      {
        'id': 11,
        'name': 'Pescado',
        'image': 'assets/dishes/pescado/trucha_patata.jpg'
      },
      {
        'id': 12,
        'name': 'Marisco',
        'image': 'assets/dishes/marisco/gambas.jpg'
      },
      {
        'id': 13,
        'name': 'Postre',
        'image': 'assets/dishes/postres/tarta_queso.jpg'
      },
      {'id': 14, 'name': 'Cafés', 'image': 'assets/dishes/cafe/cafe_solo.jpg'},
    ];

    Widget listFavorites = SizedBox(
      height: 80,
      child: StreamBuilder<List<dynamic>>(
        stream: _stream,
        builder: (context, snapshot) {
          if (snapshot.hasData) {
            return ListView.builder(
              // This next line does the trick.
              scrollDirection: Axis.horizontal,
              itemCount: snapshot.data!.length,
              itemBuilder: (context, index) {
              //children: <Widget>[
                return
                  _buildFavorites(snapshot.data![index]['name'],
                    '$vImageUrl/${snapshot.data![index]['directory']}/${snapshot.data![index]['image']}');
              },
            );
          }else if(snapshot.hasError){
            return const Center(child: Text('Se ha producido un error. No hay datos disponibles !!!'));
          }
          return const Center(child: Text('Sin Favoritos!!'));
        } //builder
      ),
    );

    return Scaffold(
      backgroundColor: Colors.amber,
      appBar: AppBar(
        title: Text('Favoritos / Familias ${widget.idWaiter} - ${widget.idTable}'),
      ),
      body: Column(
        children: [
          const SizedBox(height: 5),
          listFavorites,
          const SizedBox(height: 5,),
          Expanded(
            //flex: 2,
            child: GridView.builder(
              gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                crossAxisCount: 3, // number of items in each row
                mainAxisSpacing: 8.0, // spacing between rows
                crossAxisSpacing: 8.0, // spacing between columns
              ),
              padding: const EdgeInsets.all(8.0), // padding around the grid
              itemCount: families.length, // total number of items
              itemBuilder: (context, index) {
                return Column(
                  children: [
                    Container(
                      width: 120,
                      height: 100,
                      padding: const EdgeInsets.all(20),
                      decoration: BoxDecoration(
                          color: Colors.grey,
                          borderRadius: BorderRadius.circular(10.0),
                          image:  DecorationImage(
                              image: AssetImage(families[index]['image']),
                              fit: BoxFit.cover,
                            ),
                          boxShadow: const [
                            BoxShadow(
                              color: Colors.grey, //Color(0xffA4A4A4),
                              offset: Offset(1.0, 5.0),
                              blurRadius: 3.0,
                            ),
                          ]),
                      child: InkWell(
                        onTap: () {
                          Navigator.push(
                              context,
                              MaterialPageRoute(
                                  builder: (context) =>
                                      DishesPage(families[index]['name'])));
                        },
                      ),
                    ),
                    Text(families[index]['name']),
                  ],
                );
              },
            ),
          ),
        ],
      ),
      bottomNavigationBar: BottomNavigationBar(
        items: const <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Icon(Icons.stay_primary_landscape),
            label: 'Salas',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.table_restaurant_sharp),
            label: 'Mesas',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.person),
            label: 'Comanda',
          ),
        ],
      ),
    );
  }
}

Builder _buildFavorites(String label, String favoriteImage) {
  return Builder(builder: (context) {
    return Container(
      margin: const EdgeInsets.only(right: 5.0),
      width: 100,
      height: 80,
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
          color: Colors.grey,
          borderRadius: BorderRadius.circular(10.0),
          image: DecorationImage(
            image: NetworkImage(favoriteImage),
            fit: BoxFit.cover,
          ),
          boxShadow: const [
            BoxShadow(
              color: Colors.grey, //Color(0xffA4A4A4),
              offset: Offset(1.0, 5.0),
              blurRadius: 3.0,
            ),
          ]),
      child: InkWell(
        onTap: ()  {
          Navigator.push(context,
              MaterialPageRoute(builder: (context) => DishesPage(label)));
        },
      ),
    );
  });
}
